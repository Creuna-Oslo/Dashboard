@mixin fluid-type(
  $min-vw,
  $max-vw,
  $min-font-size,
  $max-font-size,
  $default: true
) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  $min-font-size: convert-to-rem($min-font-size);
  $max-font-size: convert-to-rem($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      @if $default == true {
        font-size: $min-font-size;
      }
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            (
              (100vw - #{convert-to-rem($min-vw)}) / #{strip-unit(
                  convert-to-rem($max-vw - $min-vw)
                )}
            )
        );
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  } @else {
    @error "Detected mixed units. Please use the same units for all parameters.";
  }
}

@mixin grid($air: 10px, $shouldHaveColumns: false, $maxColumns: 7) {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: $air;
  padding: $air;

  @if $shouldHaveColumns {
    > * {
      height: 100%;
      min-width: 0;
    }

    @media (min-width: $breakpoint-m) {
      grid-template-columns: repeat(2, 1fr);
    }

    @if $maxColumns > 2 {
      @media (min-width: $breakpoint-l) {
        grid-template-columns: repeat(3, 1fr);
      }
    }

    @if $maxColumns > 3 {
      @media (min-width: $breakpoint-xl) {
        grid-template-columns: repeat(4, 1fr);
      }
    }

    @if $maxColumns > 4 {
      @media (min-width: 2000px) {
        grid-template-columns: repeat(5, 1fr);
      }
    }

    @if $maxColumns > 5 {
      @media (min-width: 2500px) {
        grid-template-columns: repeat(6, 1fr);
      }
    }

    @if $maxColumns > 6 {
      @media (min-width: 3000px) {
        grid-template-columns: repeat(7, 1fr);
      }
    }
  }
}
